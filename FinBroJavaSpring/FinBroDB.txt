USE FinBroDB;

DROP TABLE IF EXISTS TRANSACTIONS;
DROP TABLE IF EXISTS ACCOUNTS;
DROP TABLE IF EXISTS CATEGORIES;
DROP TABLE IF EXISTS USERS;

CREATE TABLE USERS (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    surname VARCHAR(50) NOT NULL,
    age INT NOT NULL,
    username VARCHAR(50) NOT NULL UNIQUE,
    email VARCHAR(100) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL
);

CREATE TABLE CATEGORIES (
	id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    type ENUM('account', 'transaction', 'budget') NOT NULL,
    is_user_defined BOOLEAN NOT NULL,
    user_id INT,
    FOREIGN KEY (user_id) REFERENCES USERS(id) ON DELETE CASCADE,
    CHECK ((is_user_defined = 1 AND user_id IS NOT NULL) OR (is_user_defined = 0 AND user_id IS NULL))
);

CREATE TABLE ACCOUNTS (
	id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    balance DECIMAL(10, 2) NOT NULL DEFAULT 0.0,
    date_created TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    minimum_balance DECIMAL(10, 2),
    notes TEXT,
    user_id INT NOT NULL,
    category_id INT,
    FOREIGN KEY (user_id) REFERENCES USERS(id) ON DELETE CASCADE,
    FOREIGN KEY (category_id) REFERENCES CATEGORIES(id)
);

CREATE TABLE TRANSACTIONS (
	id INT AUTO_INCREMENT PRIMARY KEY,
    amount DECIMAL(10, 2) NOT NULL,
    description TEXT,
    date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    notes TEXT,
    user_id INT NULL,
    account_id INT NOT NULL,
    category_id INT,
    FOREIGN KEY (user_id) REFERENCES USERS(id) ON DELETE CASCADE,
    FOREIGN KEY (account_id) REFERENCES ACCOUNTS(id) ON DELETE CASCADE,
    FOREIGN KEY (category_id) REFERENCES CATEGORIES(id)
);

INSERT INTO USERS (name, surname, age, username, email, password)
VALUES ('Alice', 'Johnson', 28, 'alice.j', 'alice.j@example.com', 'hashed_password1'),
       ('Bob', 'Smith', 35, 'bob.s', 'bob.s@example.com', 'hashed_password2'),
       ('Emily', 'Brown', 24, 'emily.b', 'emily.b@example.com', 'hashed_password3'),
	   ('David', 'White', 30, 'david.w', 'david.w@example.com', 'hashed_password4'),
       ('Grace', 'Black', 22, 'grace.b', 'grace.b@example.com', 'hashed_password5');

INSERT INTO CATEGORIES (name, description, type, is_user_defined, user_id)
VALUES ('Savings Account', 'User savings account category', 'account', 0, NULL),
	   ('Groceries', 'Category for grocery expenses', 'transaction', 0, NULL),
       ('Monthly Budget', 'Predefined monthly budget', 'budget', 0, NULL),
       ('Investments', 'Category for investment accounts', 'account', 0, NULL),
       ('Entertainment', 'Category for entertainment expenses', 'transaction', 0, NULL),
       ('Alice Custom Category', 'Custom category created by Alice', 'transaction', 1, 1),
       ('Bob Customer Category', 'Custom category created by Bob', 'account', 1, 2);

INSERT INTO ACCOUNTS (name, balance, date_created, minimum_balance, notes, user_id, category_id)
VALUES ('Alice Savings', 1000.00, '2024-01-01 10:00:00', 500.00, 'Primary savings account', 1, 1),
	   ('Bob Checking', 1500.00, '2023-02-01 12:00:00', NULL, 'Main checking account', 2, NULL),
       ('Emily Investment', 2000.00, '2023-03-01 14:00:00', 1000.00, 'Long-term investment account', 3, 4),
       ('David Savings', 2500.00, '2023-04-01 16:00:00', 100.00, 'Secondary savings account', 4, 1),
       ('Grace Budget Account', 300.00, '2023-05-01 18:00:00', NULL, 'Budget management account', 5, 3);

INSERT INTO TRANSACTIONS (amount, description, date, notes, user_id, account_id, category_id)
VALUES (50.00, 'Grocery shopping', '2023-06-01 10:30:00', 'Bought groceries at SuperMart', 1, 1, 2),
       (20.00, 'Movie tickets', '2023-06-02 11:00:00', 'Watched a movie', 2, 2, 5),
       (100.00, 'Investment deposit', '2023-06-03 12:30:00', 'Monthly investment', 3, 3, 4),
       (30.00, 'Savings deposit', '2023-06-04 14:00:00', 'Added to savings', 4, 4, 1),
       (25.00, 'Dining out', '2023-06-05 15:30:00', 'Dinner at a restaurant', 5, 5, 5);

